name: Build and Test

on:
  pull_request:
    branches: ["main"]

jobs:
  # Job 1: Build and Unit Tests
  build-and-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Install dependencies
        run: make init

      - name: Build
        run: go build -v ./...

      - name: Unit tests
        run: make test/unit

  # Job 2: Integration Tests
  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: mirai_box_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mirai_box_password
        options: >-
          --health-cmd="pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Install dependencies
        run: make init

      - name: Build Go service
        run: make build/local

      - name: Start Go service
        run: make run/local &
        env:
          PORT: "8080"
          DB_HOST: "127.0.0.1"
          DB_PORT: "5432"
          DB_USER: "mirai_box_user"
          DB_PASSWORD: "mirai_box_password"
          DB_POSTGRES_PASSWORD: "mirai_box_password"
          DB_NAME: "mirai_box_db"
          APP_ENV: "local"
          SESSION_KEY: "e7j7eVPRDCd3f_KiQd@VeNCoBgP2pd*eL6q"
          LOG_LEVEL: "DEBUG"
          SECRET_KEY: "594f2ad00c2d8fd1543f8993b586b4143d508bc58f3c9b08e5967ab50175cb81"

      - name: Wait for Go service to be ready
        run: |
          for i in {1..30}; do
            if nc -zv 127.0.0.1 8080; then
              echo "Service is up!"
              break
            fi
            echo "Waiting for service..."
            sleep 2
          done
  
      - name: install cpanm and one module
        uses: perl-actions/install-with-cpanm@stable
        with:
          install: |
            Test::More
            LWP::UserAgent
            Data::Dumper
            File::Slurp
            JSON::PP
            HTTP::Cookies

      - name: Run Perl script to test endpoint
        run: |
          cd integration_tests
          perl tester.pl

      - name: Kill Go service
        run: killall miraibox